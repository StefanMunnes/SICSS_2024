---
title: "API Exercise - Solutions"
date: July 9, 2024
format: 
  html:
    embed-resources: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

### Task

Use the API provided by <https://api.congress.gov/> to get Names and other information on members of congress. Save the resulting data on your hard drive.

-   *NOTE: Don't forget to include a time delay between API requests!*
-   *NOTE: Congress has had \~2,500 members not 250.*
-   *NOTE: Functions like `jsonlite` convert JSON data into nested lists in R. You may retain the nested list format or convert it to a data frame, which is the format we will be using throughout this SICSS.*

### Bonus Task

Get the congressional records from 2020 to 2024. Save the resulting data on your hard drive.

-   *NOTE: The API will return URLs to pdfs or images of the congressional records. These are enough, you do not have to attempt to actually get the files!*

### API-key setup

Get your API-key <https://api.congress.gov/sign-up/>

When you run `file.edit("~/.Renviron)`, a (probably empty) window will open.

Add `congress_key = [your key]` and save (CTRL+S/CMD+S).

```{r}
file.edit("~/.Renviron")
```

Restart R, then you can access the key via `Sys.getenv("congress_key")`. Try it:

```{r}
Sys.getenv("congress_key")
```

### Packages your will (probably) need:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
```

## Work on the tasks here:

Test a single API call, before you use it an a loop/apply function!

**Testing:**

```{r}
# API call
httr_pers <- GET("https://api.congress.gov/v3/member", 
                 query = list(format = "json",
                              limit = 250,
                              offset = 0,
                              api_key = Sys.getenv("congress_key")))

# Extract the contents as JSON format/lists
members <- content(httr_pers, type='application/json')$member 

# This would be it for the task, except that we want *all* members
```

**Implementation:**

I use an infinite loop, and the packages `httr` and `jsonlite`.

```{r}
members <- data.frame()
offset <- 0

repeat {
  cat("offset=", offset, "\n")
  
  #insert a limit so you can't be identificated, so it waits a little bit between iterations (seconds), some newspapers want 3 seconds
  Sys.sleep(1)
  
  response <- GET(
    url = "https://api.congress.gov/v3/member",
    query = list(format = "json", 
                 limit = 250, 
                 offset = offset, 
                 api_key = Sys.getenv("congress_key"))
  )
  
  member <- fromJSON(content(response, 
                             as = "text", 
                             encoding = "UTF-8"), 
                     flatten = TRUE)$member
  
  if (length(member) == 0) {
    message("No more members")
    break
  }
  
  members <- bind_rows(members, as.data.frame(member))
  offset <- offset + 250
}

saveRDS(members, file = "../data/congress_members.Rds")

```

## Bonus Task

```{r}
# Congressional records starting 2020 (only includes URLs to records)
get_congr_records <- function(year, congr_records=data.frame()) {
  offset <- 0
  
  repeat {
    print(paste(year, "offset =", offset))
    Sys.sleep(1)
    
    response <- GET("https://api.congress.gov/", 
                     path = "v3/congressional-record",
                     query = list(format = "json",
                                  y = year,
                                  limit = 250,
                                  offset = offset,
                                  api_key = Sys.getenv("congress_key")))
    
    record <- fromJSON(content(response, 
                               as = "text",
                               encoding = "UTF-8"), 
                       flatten = TRUE)$Results$Issues
    
    if (length(record)==0) {
      print(paste("No more congressional records in", year))
      break
    }
    
    congr_records <- bind_rows(congr_records, as.data.frame(record))
    
    offset <- offset + 250
  }
  return (congr_records)  
}

congr_records <- bind_rows(lapply(2020:2024, get_congr_records))

saveRDS(congr_records, file = "../data/congress_record_urls.Rds")
```
