---
title: "Text Analysis I - Exercise I"
date: July 11, 2024
format: 
  html:
    embed-resources: true
    number-sections: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

# Data preparation

Packages you will (probably) need:

```{r}
library(dplyr)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
```

Load the data:

```{r}
data_fox <- readRDS("data/FOX.Rds")
data_cnn <- readRDS("data/CNN.Rds")

data_news <- bind_rows(
  list("fox" = data_fox, "cnn" = data_cnn),
  .id = "source"
)
```

Use a smaller sample (if needed):

```{r}
set.seed(161)

data_news <- slice_sample(data_news, n = 300)
```

# Inspect news data with quanteda workflow

## Create corpus, tokens and DFM objects (without pre-processing)

Create corpus object and get summary:

```{r}
corpus <- corpus(data_news, text_field = "body")
head(summary(corpus))
```

Create tokens object:

```{r}
tokens <- tokens(corpus)
head(tokens)
```

Create Document-Feature-Matrix:

```{r}
dfm <- dfm(tokens) # DFM, without pre-processing
head(dfm)
dim(dfm)
```

Show most frequent words (without pre-processing)

```{r}
topfeatures(dfm, 10)
textstat_frequency(dfm, n = 10)
```

## Pre-process the text for more useful insights

Remove unnecessary tokens and other text features, homogenize text:

```{r}
stopwords("en")

tokens_pp <- tokens(
  corpus,
  remove_punct = TRUE,
  remove_symbols = TRUE,
  remove_numbers = TRUE,
  remove_separators = TRUE
) |>
  tokens_tolower() |>
  tokens_remove(stopwords("en"), padding = FALSE) |> # show padding
  tokens_wordstem(language = "en")
```

Inspect pre-processed DFM:

```{r}
dfm_pp <- dfm(tokens_pp)
head(dfm_pp)
dim(dfm_pp)

textstat_frequency(dfm_pp, n = 10)

dfm_pp <- dfm_trim(dfm_pp, min_termfreq = 2, termfreq_type = "count")
dim(dfm_pp)
```

## Show most important compound and co-occuring words

Show statistics for top 15 collocations:

```{r}
textstat_collocations(tokens_pp) |>
  head(15)
```

**Bonus**: Create a Feature-Coocurrence-Matrix and plot connection for top 40 words:

```{r}
fcm_pp <- fcm(tokens_pp, context = "window", count = "frequency", window = 3)
# fcm_pp <- fcm(dfm_pp, context = "document", count = "frequency")
dim(fcm_pp)

fcm_pp_subset <- fcm_select(fcm_pp, names(topfeatures(dfm_pp, 40)))

textplot_network(fcm_pp_subset)
```

## **Bonus**: Visualize differences in keywords by news outlet

Check if keywords differ for different news outlets:

```{r}
textstat_keyness(dfm_pp, target = docvars(dfm_pp, "source") == "cnn") |>
  textplot_keyness()
```
