---
title: "Text Analysis I - Exercise I"
date: July 11, 2024
format: 
  html:
    embed-resources: true
    number-sections: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

# Data preparation

Packages you will (probably) need:

```{r}
library(dplyr)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
```

Load the data:

```{r}
data_cnn <- readRDS("C:/Users/kayle/Dropbox/Resources/SICSS_2024/data/CNN.Rds")
data_fox <- readRDS("C:/Users/kayle/Dropbox/Resources/SICSS_2024/data/FOX.Rds")

data_news <- bind_rows(
  list("fox" = data_fox, "cnn" = data_cnn),
  .id = "source"
)
```

Use a smaller sample (if needed):

```{r}
set.seed(161)

data_news_sm <- slice_sample(data_news, n = 300)
```

# Inspect news data with quanteda workflow

## Create corpus, tokens and DFM objects (without pre-processing)

Create corpus object and get summary:

```{r}

corpus <- corpus(data_news, text_field = "body") 
corpus_sm <- corpus(data_news_sm, text_field = "body")

```

Create tokens object:

```{r}

tokens <- tokens(corpus, what = "word") 
tokens_sm <- tokens(corpus_sm, what = "word")

```

Create Document-Feature-Matrix:

```{r}

dfm <- dfm(tokens)
dfm_sm <- dfm(tokens_sm)

```

Show most frequent words (without pre-processing)

```{r}

topfeatures(dfm, n=10)
textstat_frequency(dfm, n=10)

```

## Pre-process the text for more useful insights

Remove unnecessary tokens and other text features, homogenize text:

```{r}

stopwords("en")

tokens_pp <- tokens(
    corpus,
    what = "word",
    remove_punct = TRUE,
    remove_symbols = TRUE,
    remove_numbers = TRUE,
    remove_separators = TRUE
  ) |>
  tokens_tolower() |>
  tokens_wordstem(language = "en") |>
  tokens_remove(stopwords("en"), padding = TRUE)

tokens_pp_sm <- tokens(
    corpus_sm,
    what = "word",
    remove_punct = TRUE,
    remove_symbols = TRUE,
    remove_numbers = TRUE,
    remove_separators = TRUE
  ) |>
  tokens_tolower() |>
  tokens_wordstem(language = "en") |>
  tokens_remove(stopwords("en"), padding = TRUE)

dfm_pp <- dfm(tokens_pp)
dfm_pp_sm <- dfm(tokens_pp_sm)

```

Inspect pre-processed DFM:

```{r}

topfeatures(dfm_pp, n=10)
textstat_frequency(dfm_pp, n=10)
head(dfm_pp)
dim(dfm_pp)

head(dfm_pp_sm)
dim(dfm_pp_sm)

dfm_pp_trim <- dfm_trim(dfm_pp, min_termfreq = 2, termfreq_type = "count")
dim(dfm_pp_trim)

```

## Show most important compound and co-occuring words

Show statistics for top 15 collocations:

```{r}

colloc <- textstat_collocations(tokens_pp, size=2) # This takes a little while to run
colloc_sm <- textstat_collocations(tokens_pp_sm, size=2)
head(colloc_sm)

```

**Bonus**: Create a Feature-Coocurrence-Matrix and plot connection for top 40 words:

```{r}

fcm_pp <- fcm(tokens_pp, context = "window", count = "frequency", window = 3)
topfeatures(fcm_pp)

```

## **Bonus**: Visualize differences in keywords by news outlet

Check if keywords differ for different news outlets:

```{r}

```
