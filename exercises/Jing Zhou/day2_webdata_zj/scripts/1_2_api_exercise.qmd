---
title: "API Exercise"
date: July 9, 2024
format: 
  html:
    embed-resources: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

### Task

Use the API provided by <https://api.congress.gov/> to get Names and other information on members of congress. Save the resulting data on your hard drive.

-   *NOTE: Don't forget to include a time delay between API requests!*
-   *NOTE: Congress has had \~2,500 members not 250.*
-   *NOTE: Functions like `jsonlite` convert JSON data into nested lists in R. You may retain the nested list format or convert it to a data frame, which is the format we will be using throughout this SICSS.*

### Bonus Task

Get the congressional records from 2020 to 2024. Save the resulting data on your hard drive.

-   *NOTE: The API will return URLs to PDFs or images of the congressional records. These are enough, you do not have to attempt to actually get the files!*

### API-key setup

Get your API-key <https://api.congress.gov/sign-up/>

When you run `file.edit("~/.Renviron)`, a (probably empty) window will open.

Add `congress_key = [your key]` and save (CTRL+S/CMD+S).

```{r}
file.edit("~/.Renviron")
```

Restart R, then you can access the key via `Sys.getenv("congress_key")`. Try it:

```{r}
Sys.getenv("congress_key")
```

### Packages your will (probably) need:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
```

## Work on the tasks below or in your own R script:

Test a single API call, before you use it an a loop/apply function!

**Testing:**

```{r}
httr_members <- GET(url = "https://api.congress.gov/v3/member",
                  query = list(format = "json",
                          limit = 250,
                          offset = 0,
                           sort = "updateDate+desc",
                           api_key = Sys.getenv("congress_key")))



```

```{r}
members <- content(httr_members, type='application/json') 
```

```{r}
members <- content(httr_members, type='application/json')$members

```

```{r}
flatten_list <- function(x) {
  do.call(c, x) # the c stands for combine and is a base R function, see ?c
}
members <- lapply(members, flatten_list)
```

```{r}
df_members <- bind_rows(members)
nrow(df_members)
```

## Bonus Task

```{r}
library(jsonlite)
httr_c_record <- GET(url = "https://api.congress.gov/v3/congressional-record",
                  query = list(format = "json",
                          #limit = 250,
                          offset = 0,
                          sort = "updateDate+desc",
                          api_key = Sys.getenv("congress_key")))
```

```{r}
c_record <- content(httr_c_record, type='application/json') 
```

```{r}
c_record <- content(c_record, type='application/json')$Results
```

```{r}
fetch_congressional_records <- function(api_key, year) {
  base_url <- "https://api.congress.gov/v3/congressional-record/"
  
  # Construct the URL
  url <- paste0(base_url, "?y=", year, "&api_key=", api_key)
  
  # Make GET request
  response <- GET(url)
  
  # Check if request was successful
  if (http_status(response)$category == "Success") {
    content <- content(response, as = "text")
    json_data <- fromJSON(content)
    return(json_data)
  } else {
    warning(paste("Failed to fetch congressional records for year", year))
    return(NULL)
  }
}

```

```{r}
# Replace 'your_api_key_here' with your actual Congress.gov API key
api_key = Sys.getenv("congress_key")

# Initialize an empty list to store records
all_records <- list()

# Iterate over years from 2020 to 2024
for (year in 2020:2024) {
  # Fetch congressional records for the current year
  records <- fetch_congressional_records(api_key, year)
  
  # Append records to the list
  all_records[[as.character(year)]] <- records
  
  # Optionally, add a delay between API requests to avoid rate limiting
  Sys.sleep(1)  # 1 second delay
}

# Print the structure of the fetched data
str(all_records)
```
