---
title: "Text Analysis I - Exercise I"
date: July 11, 2024
format: 
  html:
    embed-resources: true
    number-sections: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

# Data preparation

Packages you will (probably) need:

```{r}
library(dplyr)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
```

Load the data:

```{r}
dir()
dir("data")
data_fox <- readRDS("C:/Users/hertel/data/FOX.Rds")
data_cnn <- readRDS("C:/Users/hertel/data/CNN.Rds")

data_news <- bind_rows(
  list("fox" = data_fox, "cnn" = data_cnn),
  .id = "source"
)
```

Use a smaller sample (if needed):

```{r}
set.seed(161)

data_news <- slice_sample(data_news, n = 300)
```

# Inspect news data with quanteda workflow

## Create corpus, tokens and DFM objects (without pre-processing)

Create corpus object and get summary:

```{r}
corpus <- corpus(data_news, text_field = "body")

```

Create tokens object:

```{r}
tokens <- tokens(corpus, what = "word")
```

Create Document-Feature-Matrix:

```{r}
dfm <- dfm(tokens)
```

Show most frequent words (without pre-processing)

```{r}
topfeatures(dfm, 10)
```

## Pre-process the text for more useful insights

Remove unnecessary tokens and other text features, homogenize text:

```{r}
tokens_pre <- tokens(
  corpus,
  what = "word",
  remove_punct = TRUE,
  remove_symbols = TRUE,
  remove_numbers = TRUE,
  remove_separators = TRUE
  )|>
  tokens_tolower() |>
  tokens_wordstem(language = "en") |>
  tokens_remove(stopwords("en"), padding = TRUE)
dfm_pre <- dfm(tokens_pre)
```

Inspect pre-processed DFM:

```{r}
topfeatures(dfm_pre, 10)
textstat_frequency(dfm_pre, n = 5)
dfm_tfidf <- dfm_tfidf(dfm_pre)
```

## Show most important compound and co-occuring words

Show statistics for top 15 collocations:

```{r}
textstat_collocations(tokens_pre, size = 3) %>%
  head(15)

```

**Bonus**: Create a Feature-Coocurrence-Matrix and plot connection for top 40 words:

```{r}

```

## **Bonus**: Visualize differences in keywords by news outlet

Check if keywords differ for different news outlets:

```{r}

```
