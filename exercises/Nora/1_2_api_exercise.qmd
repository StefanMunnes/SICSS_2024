---
title: "API Exercise"
date: July 9, 2024
format: 
  html:
    embed-resources: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

### Task

Use the API provided by <https://api.congress.gov/> to get Names and other information on members of congress. Save the resulting data on your hard drive.

-   *NOTE: Don't forget to include a time delay between API requests!*
-   *NOTE: Congress has had \~2,500 members not 250.*
-   *NOTE: Functions like `jsonlite` convert JSON data into nested lists in R. You may retain the nested list format or convert it to a data frame, which is the format we will be using throughout this SICSS.*

### Bonus Task

Get the congressional records from 2020 to 2024. Save the resulting data on your hard drive.

-   *NOTE: The API will return URLs to PDFs or images of the congressional records. These are enough, you do not have to attempt to actually get the files!*

### API-key setup

Get your API-key <https://api.congress.gov/sign-up/>

When you run `file.edit("~/.Renviron)`, a (probably empty) window will open.

Add `congress_key = [your key]` and save (CTRL+S/CMD+S).

```{r}
file.edit("~/.Renviron")
```

Restart R, then you can access the key via `Sys.getenv("congress_key")`. Try it:

```{r}
Sys.getenv("congress_key")
```

### Packages your will (probably) need:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
library(purrr)
```

## Work on the tasks below or in your own R script:

Test a single API call, before you use it an a loop/apply function!

**Testing:**

```{r}
library(httr)

httr_bills <- GET(url = "https://api.congress.gov/v3/bill",
                  query = list(format = "json",
                          limit = 250,
                          offset = 0,
                           sort = "updateDate+desc",
                           api_key = Sys.getenv("congress_key")))

httr_bills
```

**Implementation:**

```{r}
# get Names and other information on members of congress. Save the resulting data on your hard drive.

httr_members <- GET(url = "https://api.congress.gov/v3/member",
                  query = list(format = "json",
                          limit = 250,
                          offset = 0,
                           sort = "updateDate+desc",
                           api_key = Sys.getenv("congress_key")))

httr_members

# Extract the contents as JSON format/lists
members <- content(httr_members, type='application/json') 

# We extracted three elements, but we only need the bills list
members <- content(httr_members, type='application/json')$members


# With purr package
#library(purrr)
#members <- map(members, purrr::flatten)
#members <- map(members, purrr::flatten)

#using base R 
flatten_list <- function(x) {
  do.call(c, x) # the c stands for combine and is a base R function, see ?c
}
members <- lapply(members, flatten_list)
members <- lapply(members, flatten_list)

# bind_rows
df_members <- bind_rows(members)
```

```{r}
#loop 
base_url <- "https://api.congress.gov/v3/member"
api_key <- Sys.getenv("congress_key")

# Initialize the offset and limit
offset <- 0
limit <- 250
all_members <- list()

# Loop to get all members
repeat {
  response <- GET(url = base_url,
                  query = list(format = "json",
                               limit = limit,
                               offset = offset,
                               sort = "updateDate+desc",
                               api_key = api_key))
  
  content <- content(response, as = "text", encoding = "UTF-8")
  json_data <- fromJSON(content)
  
  members <- json_data$members
  
  all_members <- c(all_members, members)
  
  # Extract the contents as JSON format/lists
  all_members <- content(httr_members, type='application/json') 

  # We extracted three elements, but we only need the bills list
  all_members <- content(httr_members, type='application/json')$members
  
  if (length(members) < limit) {
    break
  }
  
  offset <- offset + 250
}


all_members <- map(all_members, purrr::flatten)

all_members <- bind_rows(all_members)

```

## Bonus Task

```{r}
#Get the congressional records from 2020 to 2024. Save the resulting data on your hard drive.


```
