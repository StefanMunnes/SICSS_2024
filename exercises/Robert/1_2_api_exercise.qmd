---
title: "API Exercise"
date: July 9, 2024
format: 
  html:
    embed-resources: true
editor: visual
execute: 
  eval: false
  echo: true
  output: false
  warning: false
  error: false
---

### Task

Use the API provided by <https://api.congress.gov/> to get Names and other information on members of congress. Save the resulting data on your hard drive.

-   *NOTE: Don't forget to include a time delay between API requests!*
-   *NOTE: Congress has had \~2,500 members not 250.*
-   *NOTE: Functions like `jsonlite` convert JSON data into nested lists in R. You may retain the nested list format or convert it to a data frame, which is the format we will be using throughout this SICSS.*

### Bonus Task

Get the congressional records from 2020 to 2024. Save the resulting data on your hard drive.

-   *NOTE: The API will return URLs to PDFs or images of the congressional records. These are enough, you do not have to attempt to actually get the files!*

### API-key setup

Get your API-key <https://api.congress.gov/sign-up/>

When you run `file.edit("~/.Renviron)`, a (probably empty) window will open.

Add `congress_key = [your key]` and save (CTRL+S/CMD+S).

```{r}
file.edit("~/.Renviron")
```

Restart R, then you can access the key via `Sys.getenv("congress_key")`. Try it:

```{r}
Sys.getenv("congress_key")
```

### Packages your will (probably) need:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
library(purrr)

```

## Work on the tasks below or in your own R script:

Test a single API call, before you use it an a loop/apply function!

**Testing:**

```{r}
httr_members <- GET(url = "https://api.congress.gov/v3/member",
                  query = list(format = "json",
                          offset = 0,
                          limit = 250,
                          sort = "updateDate+desc",
                          api_key = Sys.getenv("congress_key")))

#test call
httr_members

# use jsonlite package to extract content into df
test = rawToChar(httr_members$content)

member_data_raw = fromJSON(rawToChar(httr_members$content))
names(member_data_raw)

df_test <- as.data.frame(member_data_raw$members)

```

**Implementation:**

```{r}

# Build loop to query 250 at a time 
offset_hack <- 0

while(TRUE){
  httr_members <- GET(url = "https://api.congress.gov/v3/member",
                  query = list(format = "json",
                           api_key = Sys.getenv("congress_key"),                            limit = 250, 
                           offset = offset_hack
                           ))
rawToChar(httr_members$content)
member_data_raw = fromJSON(rawToChar(httr_members$content))
# names(member_data_raw)
# monitoring <- member_data_raw$pagination$count

# df_temp <- as.data.frame(member_data_raw$members)
df_final <- bind_rows(df_final, as.data.frame(member_data_raw$members))
 
offset_hack <- offset_hack + 250

if (offset_hack > 2600){
  break}
}

```

## Bonus Task

```{r}

adding_fun <- function(r){
    r+250
}
print(adding_fun(2))
```
